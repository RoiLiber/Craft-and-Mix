{"version":3,"sources":["assest/img/carousel/About us.jpeg","assest/img/carousel/Our Services.jpeg","assest/img/carousel/Mode.jpeg","assest/img/carousel/On the Menu.jpeg","assest/img/logos/A.jpeg","store/reducer/mainReducer.js","store/actions/actionTypes.js","rootReducer.js","components/UI/Logo/Logo.js","store/actions/mainActions.js","components/SectionHeadLine/index.js","components/SectionHeadLine/SectionHeadLine.js","components/Menu/Menu.js","components/Menu/index.js","components/Header/Header.js","components/Header/index.js","components/Carousel/index.js","components/Carousel/Carousel.js","sections/CarouselSection/CarouselSection.js","sections/ContactUsSection/ContactUsSection.js","containers/BackgroundLayout/BackgroundLayout.js","containers/BackgroundLayout/index.js","sections/AboutUsSection/index.js","sections/AboutUsSection/AboutUsSection.js","components/Footer/index.js","components/Footer/Footer.js","containers/TopLayout/TopLayout.js","containers/TopLayout/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","initialState","menuList","openMenu","carousel","text","img","imgAbout","color","index","imgServices","imgMode","imgMenu","authReducer","state","action","type","payload","rootReducer","combineReducers","mainReducer","Logo","props","className","src","logo","toggleMenu","bool","dispatch","SectionHeadLine","this","textColor","arrowColor","lineColor","scrollTo","scroll","arrowUp","onClick","Component","Menu","componentDidMount","Events","scrollEvent","register","to","element","console","log","arguments","scrollSpy","update","i","componentWillUnmount","remove","clickedMenu","right","map","item","duration","key","connect","Header","handleScroll","scrollTopY","window","scrollY","width","innerWidth","setState","styleClassName","addEventListener","removeEventListener","Carousel","carouselItem","carouselNextItem","activeCarousel","photo","alt","left","delay","CarouselSection","toggleCarousel","forceCarouselItem","setCarouselItem","find","carouselDots","selectedCarouselItem","prevProps","prevState","snapshot","setTimeout","ContactUsSection","href","target","BackgroundLayout","carouselSection","contactUsSection","AboutUsSection","name","Footer","TopLayout","App","Boolean","location","hostname","match","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8a823031.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/About us.c718425a.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/Our Services.83a59f4b.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/Mode.5234f944.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/On the Menu.5fd669cc.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/A.1b02a294.jpeg\";","import * as actionTypes from '../actions/actionTypes';\r\nimport imgAbout from \"../../assest/img/carousel/About us.jpeg\";\r\nimport imgServices from \"../../assest/img/carousel/Our Services.jpeg\";\r\nimport imgMode from \"../../assest/img/carousel/Mode.jpeg\";\r\nimport imgMenu from \"../../assest/img/carousel/On the Menu.jpeg\";\r\n\r\nconst menuList = [\r\n    'About us',\r\n    'Our Services',\r\n    'Mode',\r\n    'On the Menu',\r\n    'Some happy Customers',\r\n    'Connect us',\r\n];\r\n\r\nconst carousel = [\r\n    { text: 'About us', img: imgAbout, color: 'black', index: 0 },\r\n    { text: 'Our Services', img: imgServices, color: 'gold', index: 1 },\r\n    { text: 'Mode', img: imgMode, color: 'black', index: 2 },\r\n    { text: 'On the Menu', img: imgMenu, color: 'gold', index: 3 }\r\n];\r\n\r\nconst initialState = {\r\n    menuList,\r\n    openMenu: false,\r\n    carousel\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.TOGGLE_MENU: {\r\n            const openMenu = action.payload;\r\n\r\n            return {\r\n                ...state,\r\n                openMenu\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default authReducer;\r\n","export const TOGGLE_MENU = 'TOGGLE_MENU';\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import { combineReducers } from 'redux';\r\nimport mainReducer from \"./store/reducer/mainReducer\";\r\n\r\nexport const rootReducer = combineReducers({\r\n  mainReducer\r\n});\r\n","import React from 'react';\r\nimport logo from '../../../assest/img/logos/A.jpeg';\r\nimport './style.scss';\r\n\r\nexport default function Logo(props) {\r\n    return (\r\n        <div className={'logo'}>\r\n            <div className={'cr'}>\r\n                <span>CR</span>\r\n                <img src={logo}/>\r\n                <span>FT</span>\r\n            </div>\r\n            <span className={'and'}>&</span>\r\n            <span>MIX</span>\r\n        </div>\r\n    );\r\n}\r\n","import * as actionTypes from \"./actionTypes\";\r\n\r\nexport const toggleMenu = bool => {\r\n    return (dispatch) => {\r\n        dispatch({\r\n            type: actionTypes.TOGGLE_MENU,\r\n            payload: bool\r\n        })\r\n    }\r\n};\r\n","import SectionHeadLine from './SectionHeadLine';\r\n\r\nexport default SectionHeadLine;\r\n","import React, { Component } from 'react';\r\nimport './style.scss';\r\n\r\nclass SectionHeadLine extends Component {\r\n\r\n    render() {\r\n        const { text, textColor, arrowColor, lineColor, scrollTo, scroll, arrowUp } = this.props;\r\n        return (\r\n            <div className={'head_line'}>\r\n                <div className={'text'}>\r\n                    <span className={lineColor}/>\r\n                    <p className={textColor}>{text}</p>\r\n                    <span className={lineColor}/>\r\n                </div>\r\n                <div className={`arrow_down ${arrowColor} ${arrowUp ? 'up': ''}`} onClick={() => scrollTo(scroll)}>\r\n                    {arrowUp ? <i className=\"fas fa-angle-up\"/> : <i className=\"fas fa-angle-down\"/>}\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    };\r\n}\r\n\r\nexport default SectionHeadLine;\r\n","import React, { Component, Fragment } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { Slide, Fade  } from 'react-reveal';\r\nimport { toggleMenu } from \"../../store/actions/mainActions\";\r\nimport { Events, animateScroll as scroll, scrollSpy, } from 'react-scroll';\r\nimport SectionHeadLine from \"../SectionHeadLine\";\r\nimport './style.scss';\r\n\r\nclass Menu extends Component {\r\n\r\n    componentDidMount = () => {\r\n        Events.scrollEvent.register('begin', function(to, element) {\r\n            console.log(\"begin\", arguments);\r\n        });\r\n        Events.scrollEvent.register('end', function(to, element) {\r\n            console.log(\"end\", arguments);\r\n        });\r\n        scrollSpy.update();\r\n    };\r\n\r\n    scrollTo = i => {\r\n        scroll.scrollTo(i);\r\n    };\r\n\r\n    componentWillUnmount = () => {\r\n        Events.scrollEvent.remove('begin');\r\n        Events.scrollEvent.remove('end');\r\n    };\r\n\r\n    clickedMenu = index => {\r\n        const { toggleMenu } = this.props;\r\n        const scrollTo = index === 0 ? 580 : index === 1 ? 1000 : index === 5 ? 754 : 0;\r\n        this.scrollTo(scrollTo);\r\n        toggleMenu(false)\r\n    };\r\n\r\n    render() {\r\n        const { menuList, openMenu } = this.props;\r\n\r\n        return (\r\n            <Fragment>\r\n            {\r\n                openMenu\r\n                ? <Slide right>\r\n                    <div className=\"menu\">\r\n                        {menuList.map((item, index) => {\r\n                            return <Fade duration={2500}>\r\n                                <span key={item} onClick={() => this.clickedMenu(index)}>\r\n                                <SectionHeadLine\r\n                                    text={item}\r\n                                    textColor={'black'}\r\n                                    arrowColor={'gold'}\r\n                                    lineColor={'gold'}\r\n                                />\r\n                                </span>\r\n                            </Fade>\r\n                        })}\r\n                    </div>\r\n                </Slide>\r\n                : null\r\n            }\r\n            </Fragment>\r\n        )\r\n    };\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    const { menuList, openMenu } = state.mainReducer;\r\n    return {\r\n        menuList,\r\n        openMenu\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        toggleMenu: bool => dispatch(toggleMenu(bool)),\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Menu);\r\n","import Menu from \"./Menu\";\r\n\r\nexport default Menu;\r\n","import React, { Component, Fragment } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport Logo from '../UI/Logo/Logo';\r\nimport { toggleMenu } from '../../store/actions/mainActions';\r\nimport Menu from '../../components/Menu';\r\nimport './style.scss';\r\n\r\nclass Header extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            styleClassName: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.addEventListener('scroll', this.handleScroll);\r\n    }\r\n    componentWillUnmount() {\r\n        window.removeEventListener('scroll', this.handleScroll);\r\n    }\r\n    handleScroll = () => {\r\n        let scrollTopY = window.scrollY;\r\n        let width = window.innerWidth;\r\n\r\n        if (scrollTopY > 585 && width <= 1200) {\r\n            this.setState({ styleClassName: true });\r\n        } else {\r\n            this.setState({ styleClassName: false });\r\n        }\r\n    };\r\n\r\n    toggleMenu = () => {\r\n        const { openMenu, toggleMenu } = this.props;\r\n        toggleMenu(!openMenu)\r\n    };\r\n\r\n    render() {\r\n        const { styleClassName } = this.state;\r\n\r\n        return (\r\n            <Fragment>\r\n                <div className={styleClassName ? 'header sm' : 'header'}>\r\n                    <div className={'top'}>\r\n                        <Logo/>\r\n                    </div>\r\n                    <div className={'menu_button'} onClick={() => this.toggleMenu()}>\r\n                        <i className=\"fas fa-ellipsis-h\"/>\r\n                    </div>\r\n                    <span>cocktail bar service and much more</span>\r\n                    <Menu className={styleClassName ? 'menu sm' : 'menu'}/>\r\n                </div>\r\n            </Fragment>\r\n        )\r\n    };\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    const { openMenu } = state.mainReducer;\r\n    return {\r\n        openMenu\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        toggleMenu: bool => dispatch(toggleMenu(bool)),\r\n    }\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\r\n","import Header from \"./Header\";\r\n\r\nexport default Header;","import Carousel from './Carousel';\r\n\r\nexport default Carousel;\r\n","import React, { Component, Fragment } from 'react';\r\nimport { Slide } from 'react-reveal';\r\nimport './style.scss';\r\n\r\nclass Carousel extends Component {\r\n\r\n\r\n    render() {\r\n        const { carouselItem, carouselNextItem, activeCarousel } = this.props;\r\n        const text = (text, color) => {\r\n            return <div className={`carousel_section ${color}`}>\r\n                <span>{text}</span>\r\n            </div>\r\n        };\r\n        const photo = (img, color) => {\r\n            return <div className={`carousel_section ${color}`}>\r\n                <img src={img} alt={'mood_photo'}/>\r\n            </div>\r\n        };\r\n        return (\r\n            <Fragment>\r\n                {\r\n                    carouselItem.index === 0 || carouselItem.index === 2\r\n                        ?   <div className={`carousel bottomCarouselItem`}>\r\n                                {text(carouselItem.text, carouselItem.color)}\r\n                                {photo(carouselItem.img, carouselItem.color)}\r\n                        </div>\r\n                        :   <div className={`carousel bottomCarouselItem`}>\r\n                                {photo(carouselItem.img, carouselItem.color)}\r\n                                {text(carouselItem.text, carouselItem.color)}\r\n                        </div>\r\n                }\r\n                {\r\n                    activeCarousel\r\n                        ? carouselItem.index === 0 || carouselItem.index === 2\r\n                        ?   <div className={`carousel topCarouselItem`}>\r\n                                <Slide left delay={5000}>\r\n                                    {photo(carouselNextItem.img, carouselNextItem.color)}\r\n                                </Slide>\r\n                                <Slide right delay={5000}>\r\n                                    {text(carouselNextItem.text, carouselNextItem.color)}\r\n                                </Slide>\r\n                        </div>\r\n                        :   <div className={`carousel topCarouselItem`}>\r\n                            <Slide left delay={5000}>\r\n                                {text(carouselNextItem.text, carouselNextItem.color)}\r\n                            </Slide>\r\n                            <Slide right delay={5000}>\r\n                                {photo(carouselNextItem.img, carouselNextItem.color)}\r\n                            </Slide>\r\n                        </div>\r\n                        : null\r\n                }\r\n            </Fragment>\r\n        )\r\n    };\r\n}\r\n\r\nexport default Carousel;\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport Carousel from '../../components/Carousel';\r\nimport { find } from 'lodash';\r\nimport './style.scss';\r\n\r\nclass CarouselSection extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            carouselItem: this.props.carousel[0],\r\n            carouselNextItem: this.props.carousel[1],\r\n            activeCarousel: false,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.toggleCarousel(true)\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const { activeCarousel, carouselNextItem } = this.state;\r\n\r\n        if (prevProps.activeCarousel !== activeCarousel && activeCarousel) {\r\n            setTimeout(() => {\r\n                this.setCarouselItem(carouselNextItem.index)\r\n            }, 6000)\r\n        }\r\n    }\r\n\r\n    toggleCarousel = bool => {\r\n        this.setState({ activeCarousel: bool })\r\n    };\r\n\r\n    forceCarouselItem = index => {\r\n        // this.toggleCarousel(false);\r\n        // this.setCarouselItem(index)\r\n        // this.toggleCarousel(true);\r\n    };\r\n\r\n    setCarouselItem = (index) => {\r\n        const { carousel } = this.props;\r\n        this.toggleCarousel(false);\r\n        find = find(carousel, { index: index });\r\n        this.setState({\r\n            carouselItem: find,\r\n            carouselNextItem: find.index === 3 ? carousel[0] : carousel[find.index + 1],\r\n        });\r\n        this.toggleCarousel(true);\r\n    };\r\n\r\n    render() {\r\n        const { carouselItem, carouselNextItem, activeCarousel } = this.state;\r\n\r\n        return (\r\n            <div className={'carousel_section'}>\r\n                <Carousel\r\n                    carouselItem={carouselItem}\r\n                    carouselNextItem={carouselNextItem}\r\n                    toggleCarousel={this.toggleCarousel}\r\n                    activeCarousel={activeCarousel}\r\n                />\r\n                {this.carouselDots()}\r\n            </div>\r\n        )\r\n    };\r\n    carouselDots = () => {\r\n        const { carouselItem } = this.state;\r\n        const dotsArray = [1, 2, 3, 4];\r\n\r\n        return <div className={'dots'}>\r\n            {dotsArray.map((item, index) => {\r\n                const selectedCarouselItem = index === carouselItem.index;\r\n                return <i key={index} className={selectedCarouselItem ? \"far fa-dot-circle gold\" :  \"far fa-dot-circle\"} onClick={() => this.forceCarouselItem(index)}/>\r\n            })}\r\n        </div>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    const { carousel } = state.mainReducer;\r\n    return {\r\n        carousel\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(CarouselSection);\r\n","import React, { Component, Fragment } from 'react';\r\nimport './style.scss';\r\nimport SectionHeadLine from \"../../components/SectionHeadLine\";\r\n\r\nclass ContactUsSection extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className={'contact_us_section'}>\r\n                <Fragment>\r\n                    <a href={'https://www.instagram.com/craftnmix/'} target={'_blank'}>\r\n                        <i className=\"fab fa-instagram\"/>\r\n                    </a>\r\n                    <a href={'https://www.facebook.com/asafamir1'} target={'_blank'}>\r\n                        <i className=\"fab fa-facebook-square\"/>\r\n                    </a>\r\n                    <a href={'#'} target={'_blank'}>\r\n                        <i className=\"fas fa-phone-square-alt\"/>\r\n                    </a>\r\n                    <a href={'#'} target={'_blank'}>\r\n                        <i className=\"far fa-envelope\"/>\r\n                    </a>\r\n                </Fragment>\r\n                <SectionHeadLine\r\n                    //scrollTo={this.scrollTo}\r\n                    scroll={1000}\r\n                    text={'Mood'}\r\n                    textColor={'black'}\r\n                    arrowColor={'gold'}\r\n                    lineColor={'gold'}\r\n                    arrowUp={true}\r\n                />\r\n            </div>\r\n        )\r\n    };\r\n}\r\n\r\nexport default ContactUsSection;\r\n","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport CarouselSection from \"../../sections/CarouselSection/CarouselSection\";\r\nimport ContactUsSection from \"../../sections/ContactUsSection/ContactUsSection\";\r\nimport './style.scss';\r\n\r\n\r\n\r\nclass BackgroundLayout extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            carouselSection: true,\r\n            contactUsSection: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.addEventListener('scroll', this.handleScroll);\r\n    }\r\n    componentWillUnmount() {\r\n        window.removeEventListener('scroll', this.handleScroll);\r\n    }\r\n    handleScroll = () => {\r\n        let scrollTopY = window.scrollY;\r\n        if (scrollTopY > 585) {\r\n            this.setState({ carouselSection: false, contactUsSection: true });\r\n        } else {\r\n            this.setState({ carouselSection: true, contactUsSection: false });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { carouselSection, contactUsSection } = this.state;\r\n        return (\r\n            <div className=\"background_layout\">\r\n                {carouselSection && <CarouselSection/>}\r\n                {contactUsSection && <ContactUsSection/>}\r\n            </div>\r\n        )\r\n    };\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(BackgroundLayout);\r\n","import BackgroundLayout from \"./BackgroundLayout\";\r\n\r\nexport default BackgroundLayout;\r\n","import AboutUsSection from './AboutUsSection';\r\n\r\nexport default AboutUsSection;\r\n","import React, { Component } from 'react';\r\nimport SectionHeadLine from \"../../components/SectionHeadLine\";\r\nimport { Events, animateScroll as scroll, scrollSpy, } from 'react-scroll';\r\nimport { Element } from 'react-scroll';\r\nimport './style.scss';\r\n\r\nclass AboutUsSection extends Component {\r\n\r\n    componentDidMount = () => {\r\n        Events.scrollEvent.register('begin', function(to, element) {\r\n            console.log(\"begin\", arguments);\r\n        });\r\n        Events.scrollEvent.register('end', function(to, element) {\r\n            console.log(\"end\", arguments);\r\n        });\r\n        scrollSpy.update();\r\n    };\r\n\r\n    scrollTo = i => {\r\n        scroll.scrollTo(i);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Element name=\"about_section\" className=\"about_section\">\r\n                <div className={'about_us'}>\r\n                    <SectionHeadLine\r\n                        scrollTo={this.scrollTo}\r\n                        scroll={580}\r\n                        text={'About us'}\r\n                        textColor={'black'}\r\n                        arrowColor={'gold'}\r\n                        lineColor={'gold'}\r\n                    />\r\n                    <div className={'text'}>\r\n                        <div>\r\n                            <p>Created by <span className={'gold_color'}>Asaf Amir</span>,</p>\r\n                            <p><span className={'gold_color'}>CRAFT & MIX</span> is set to give you</p>\r\n                            <p>the best cocktail and bar</p>\r\n                            <p>experience you can get!</p>\r\n                        </div>\r\n                        <div>\r\n                            <p>Our top priority is</p>\r\n                            <p>professional and kind service</p>\r\n                            <p>next to deep</p>\r\n                            <p>mixology creativity</p>\r\n                            <p>and fancy cocktails.</p>\r\n                        </div>\r\n                        <div>\r\n                            <p>We give services to</p>\r\n                            <p>private clients,</p>\r\n                            <p> business companies,</p>\r\n                            <p> bars and restaurants.</p>\r\n                        </div>\r\n                    </div>\r\n                    <SectionHeadLine\r\n                        scrollTo={this.scrollTo}\r\n                        scroll={1000}\r\n                        text={'Our services'}\r\n                        textColor={'black'}\r\n                        arrowColor={'gold'}\r\n                        lineColor={'gold'}\r\n                    />\r\n                    <div className={'services'}>\r\n                        <div className={'service'}>\r\n                            <i className=\"fab fa-elementor\"/>\r\n                            <p>Bars advice and cocktail's menu build</p>\r\n                        </div>\r\n                        <div className={'service'}>\r\n                            <i className=\"fas fa-glass-martini-alt\"/>\r\n                            <p>Bar and cocktails services for any event</p>\r\n                        </div>\r\n                        <div className={'service'}>\r\n                            <i className=\"fas fa-wine-bottle\"/>\r\n                            <p>Pre mixed and ready to served craft cocktails in bottled</p>\r\n                        </div>\r\n                    </div>\r\n                    <SectionHeadLine\r\n                        scrollTo={this.scrollTo}\r\n                        scroll={1000}\r\n                        text={'Mood'}\r\n                        textColor={'black'}\r\n                        arrowColor={'gold'}\r\n                        lineColor={'gold'}\r\n                    />\r\n                </div>\r\n            </Element>\r\n        )\r\n    };\r\n}\r\n\r\nexport default AboutUsSection;\r\n\r\n\r\n\r\n\r\n","import Footer from './Footer';\r\n\r\nexport default Footer;\r\n","import React, { useState } from 'react';\r\nimport './style.scss';\r\nimport Logo from \"../UI/Logo/Logo\";\r\n\r\nexport default function Footer(props) {\r\n    return (\r\n        <div className={'footer'}>\r\n            <Logo/>\r\n            <span>by Asaf Amir</span>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport AboutUsSection from \"../../sections/AboutUsSection\";\r\nimport './style.scss';\r\nimport Footer from \"../../components/Footer\";\r\n\r\nclass TopLayout extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"top_layout\">\r\n                <AboutUsSection/>\r\n                <div className={'test'}/>\r\n                <Footer/>\r\n            </div>\r\n        )\r\n    };\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(TopLayout);\r\n","import TopLayout from \"./TopLayout\";\r\n\r\nexport default TopLayout;\r\n","import React, { Component } from 'react';\r\nimport Header from \"./components/Header\";\r\nimport BackgroundLayout from \"./containers/BackgroundLayout\";\r\nimport TopLayout from \"./containers/TopLayout\";\r\nimport './reset.scss';\r\nimport './App.scss';\r\n\r\nclass App extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"App\">\r\n                <Header/>\r\n                <BackgroundLayout/>\r\n                <TopLayout/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { applyMiddleware, createStore } from 'redux';\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from 'redux-thunk';\r\nimport { rootReducer } from './rootReducer';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport './index.scss';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nconst initialState = {};\r\nconst store = createStore(rootReducer, initialState,\r\n    composeWithDevTools(\r\n        applyMiddleware(thunk)\r\n    )\r\n);\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <BrowserRouter>\r\n            <App/>\r\n        </BrowserRouter>\r\n    </Provider>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}